    
{% render 'resuableComponent-scroll-animation' %}
    
<style>
.imagesScroll {
    width: 100%;
    height: 1000vh;
}

.imagesScroll .rq {
    margin-left:-190px;
    width: 150%;
    height: 100vh;
    position: sticky;
    top: 0;
    overflow: hidden;
}

.imagesScroll .imgsSection {
    width: 100%;
    position: relative;
}

.imagesScroll .imgsSection img {
    width: 100%;
    vertical-align: right;
}

.scrollAnimation{
    background-color:black;
    vertical-align: middle;
  justify-content: center;
}

.scrollGroup{
    display:flex;
}
.text-title{
    position:sticky;
    z-index:10;

}
  
.container-title {
    z-index: 1;
    position: relative;
}

.content {
    position: sticky;
    position: -webkit-sticky;
    width: 80%;
    top: 43.3%;
    text-align:left;
}

.h1 {
    font-size: 1.8em !important;
    display: inline-block;
    padding: 10px 15px;
    margin: 0;
    color:white !important;
    font-weight:600;
}
.p { font-size: 16px; 
    color:white !important;
    padding: 10px 15px;
}

.container-title:nth-of-type(1) {
    height: 2500px;
     animation: fadeUpAnimation 1s ease both;
    animation-timeline: view();
}
.container-title:nth-of-type(2) {
    height: 2500px;
     animation: fadeUpAnimation 0.1s ease both;
    animation-timeline: view();
}
.container-title:nth-of-type(3) {
    height: 1200px;
     animation: fadeUpAnimation 0.1s ease both;
    animation-timeline: view();
}
.container-title:nth-of-type(4) {
    height: 1000px;
     animation: fadeUpAnimation 0.1s ease both;
    animation-timeline: view();
}
.container-title:nth-of-type(5) {
    height: 2000px;
     animation: fadeUpAnimation 0.1s ease both;
    animation-timeline: view();
}

.entered {
	{% comment %} -webkit-animation: text-focus-in 1s cubic-bezier(0.550, 0.085, 0.680, 0.530) both;
	        animation: text-focus-in 1s cubic-bezier(0.550, 0.085, 0.680, 0.530) both; {% endcomment %}
}

/* ----------------------------------------------
 * Generated by Animista on 2018-7-4 16:24:12
 * w: http://animista.net, t: @cssanimista
 * ---------------------------------------------- */

/**
 * ----------------------------------------
 * animation text-focus-in
 * ----------------------------------------
 */
@keyframes fadeUpAnimation {
  0% {
    opacity: 0;
    transform: translateY(50px);
  }
  20% {
    opacity: 0;
    transform: translateY(50px);
  }
  50% {
    opacity: 1;
    transform: translateY(0);
  }
  95% {
    opacity: 0;
    transform: translateY(0px);
  }
  100% {
    opacity: 0;
    transform: translateY(0px);
  }
}
 @-webkit-keyframes text-focus-in {
    0% {
      -webkit-filter: blur(0px);
              filter: blur(0px);
      opacity: 0;
    }
    100% {
      -webkit-filter: blur(12px);
              filter: blur(12px);
      opacity: 1;
    }
  }
  @keyframes text-focus-in {
    0% {
      -webkit-filter: blur(12px);
              filter: blur(12px);
      opacity: 0;
    }
    100% {
      -webkit-filter: blur(0px);
              filter: blur(0px);
      opacity: 1;
    }
  }
  
.fourColumn-mobile {
        display: none;
        width: 100%;
        overflow: hidden;
        position: relative;
    }
    .fourColumn-mobile .swiper-pagination-bullets {
        bottom: 0 !important;
    }
    .fourColumn-mobile .swiper-pagination-bullet {
        background-color: #1A1A1A;
        width: 27px;
        height: 4px;
        border-radius: 0;
    }

@media (max-width: 480px) {
        .fourColumn-mobile {
            display: flex;
        }
        .scroll-animation-desktop {
            display: none !important;
        }
    }

 
    </style>


    <script src="https://code.jquery.com/jquery-3.6.3.min.js" integrity="sha256-pvPw+upLPUjgMXY0G+8O0xUf+/Im1MZjXxxgOcBQBXU=" crossorigin="anonymous"></script>
    
    <script src="{{ 'sticky.js' | asset_url }}"></script>

<script>

        enterView({
            selector: '.container-title',
            enter: function(el) {
                el.classList.add('entered');
            }
        })
    
        var frameNumber = 0, // start video at frame 0
        // lower numbers = faster playback
        playbackConst = 1000, 
        // get page height from video duration
        setHeight = document.getElementById("set-height"), 
        // select video element         
        vid = document.getElementById('v0'); 
        // var vid = $('#v0')[0]; // jquery option

    // dynamically set the page height according to video length
    vid.addEventListener('loadedmetadata', function() {
    setHeight.style.height = Math.floor(vid.duration) * playbackConst + "px";
    });


    // Use requestAnimationFrame for smooth playback
    function scrollPlay(){  
    var frameNumber  = window.pageYOffset/playbackConst;
    vid.currentTime  = frameNumber;
    window.requestAnimationFrame(scrollPlay);
    }

    window.requestAnimationFrame(scrollPlay);
    
    </script>

    <script>
    
        var windowHeight = $(window).outerHeight();
        $(window).scroll(function () {

            $animation_1 = $('.animation_1');
            if ($(window).scrollTop() > $animation_1.offset().top) {
                let idx = parseInt((($(window).scrollTop() - $animation_1.offset().top) / (
                        $animation_1.outerHeight() - windowHeight)) * $animation_1.find('.imgsSection img')
                    .length);
                if (idx >= 0) {

                    $animation_1.find('.imgsSection img').eq(idx).show().siblings().hide();

                    let visibleFrame = $animation_1.find('.imgsSection img[style!="display: none;"]').first();
                    let currentFrame = $animation_1.find('.imgsSection img').index(visibleFrame);

                    console.log('Frame 1: ' + currentFrame);
                    
                }
            }

            $animation_2 = $('.animation_2');
            if ($(window).scrollTop() > $animation_2.offset().top) {
                let idx = parseInt((($(window).scrollTop() - $animation_2.offset().top) / (
                        $animation_2.outerHeight() - windowHeight)) * $animation_2.find('.imgsSection img')
                    .length);
                if (idx >= 0) {

                    $animation_2.find('.imgsSection img').eq(idx).show().siblings().hide();

                    let visibleFrame = $animation_1.find('.imgsSection img[style!="display: none;"]').first();
                    let currentFrame = $animation_1.find('.imgsSection img').index(visibleFrame);

                    console.log('Frame 2: ' + currentFrame);
                    
                    
                }
            }

            $animation_3 = $('.animation_3');
            if ($(window).scrollTop() > $animation_3.offset().top) {
                let idx = parseInt((($(window).scrollTop() - $animation_3.offset().top) / (
                        $animation_3.outerHeight() - windowHeight)) * $animation_3.find('.imgsSection img')
                    .length);
                if (idx >= 0) {

                    $animation_3.find('.imgsSection img').eq(idx).show().siblings().hide();

                    let visibleFrame = $animation_1.find('.imgsSection img[style!="display: none;"]').first();
                    let currentFrame = $animation_1.find('.imgsSection img').index(visibleFrame);

                    console.log('Frame 2: ' + currentFrame);
                    
                    
                }
            }

            $animation_4 = $('.animation_4');
            if ($(window).scrollTop() > $animation_4.offset().top) {
                let idx = parseInt((($(window).scrollTop() - $animation_4.offset().top) / (
                        $animation_4.outerHeight() - windowHeight)) * $animation_4.find('.imgsSection img')
                    .length);
                if (idx >= 0) {

                    $animation_4.find('.imgsSection img').eq(idx).show().siblings().hide();

                    let visibleFrame = $animation_1.find('.imgsSection img[style!="display: none;"]').first();
                    let currentFrame = $animation_1.find('.imgsSection img').index(visibleFrame);

                    console.log('Frame 2: ' + currentFrame);
                    
                    
                }
            }

            $animation_5 = $('.animation_5');
            if ($(window).scrollTop() > $animation_5.offset().top) {
                let idx = parseInt((($(window).scrollTop() - $animation_5.offset().top) / (
                        $animation_5.outerHeight() - windowHeight)) * $animation_5.find('.imgsSection img')
                    .length);
                if (idx >= 0) {

                    $animation_5.find('.imgsSection img').eq(idx).show().siblings().hide();

                    let visibleFrame = $animation_1.find('.imgsSection img[style!="display: none;"]').first();
                    let currentFrame = $animation_1.find('.imgsSection img').index(visibleFrame);

                    console.log('Frame 2: ' + currentFrame);
                    
                    
                }
            }

        })
    </script>

{% javascript %}

    //the mobile version
    // swiper js
    const swiper = new Swiper('.fourColumn-mobile', {
        direction: 'horizontal',
        loop: false,
        speed: 1000,
        spaceBetween: 20,
        autoplay: false,
        observer: true,
        observeParents: true,
        autoHeight: true,
        pagination: {
            el: '.swiper-pagination',
            type: 'bullets',
            clickable:'true'
        }
    });
    
{% endjavascript %}

{% schema %}
    {
        "name": "Scroll Animation",
        "settings": [
            {
                "type": "number",
                "id": "section_paddingTop",
                "label": "Section Padding Top",
                "default": 100
            },
            {
                "type": "number",
                "id": "section_paddingBottom",
                "label": "Section Padding Bottom",
                "default": 100
            },
            {
                "type": "color",
                "id": "bg_color",
                "label": "Background Color",
                "default": "#000000"
            },
            {
                "type": "color",
                "id": "txt_color",
                "label": "Text Color",
                "default": "#ffffff"
            }
        ],
        "blocks": [
            {
                "type": "column",
                "name": "Item",
                "limit": 5,
                "settings": [
                    {
                        "type": "text",
                        "id": "left_headingText",
                        "label": "Left Heading Text",
                        "default": "Left Heading Text"
                    },
                    {
                        "type": "richtext",
                        "id": "left_paragraph",
                        "label": "Left Paragraph"
                    },
                    {
                        "type": "image_picker",
                        "id": "right_image",
                        "label": "Right Image"
                    },
                    {
                        "type": "video",
                        "id": "video",
                        "label": "Video"
                    }
                ]
            }
        ],
        "presets": [
          {
            "name": "Scroll Animation"
          }
        ]
    }
{% endschema %}